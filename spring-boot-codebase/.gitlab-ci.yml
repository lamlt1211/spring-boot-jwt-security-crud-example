services:

  - docker:19.03.7-dind

stages:

  - build jar

  - build and push docker image

  - deploy

build:

  image: maven:3.8.2-jdk-1.8-slim

  stage: build jar

  before_script:

    - source .env

  script:

    - mvn clean install -Dspring.profiles.active=development && mvn package -B -e -Dspring.profiles.active=development

  artifacts:

    paths:

      - target/*.jar

docker build:

  image: r_and_t_java:feature-authentication

  stage: build and push docker image

  before_script:

    - source .env

  script:

    - docker build --build-arg SPRING_ACTIVE_PROFILE=development -t $DOCKER_REPO .

    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io

    - docker push $DOCKER_REPO

deploy:

  image: ubuntu:latest

  stage: deploy

  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io; docker stop $APP_NAME; docker system prune -a -f; docker pull $DOCKER_REPO; docker container run -d --name $APP_NAME -p $PORT -e SPRING_PROFILES_ACTIVE=$SPRING_ACTIVE_PROFILE $DOCKER_REPO; docker logout
    - docker container run --name mysqldb -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=springsecu -d mysql:8